version: '3.7'
services:
  cms:
    image: traefik/whoami
    container_name: cms
    env_file: .env
    # environment:
    #   TRACKER_SCRIPT_NAME: getinfo
    #   API_COLLECT_ENDPOINT: all
    #   APP_SECRET: replace-me-with-a-random-string
    labels:
      traefik.enable: true
      traefik.docker.network: ${SHARED-NETWORK}
      # router
      traefik.http.routers.cms.service: cms
      traefik.http.routers.cms.entrypoints: websecure
      traefik.http.routers.cms.middlewares: "default@file"
      traefik.http.routers.cms.rule: Host(`${CMS_HOST:?err}`)
      traefik.http.routers.cms.tls.certresolver: "letsencrypt"
      traefik.http.routers.cms.tls.options: "modern@file"
      traefik.http.routers.cms.tls: true
      # service
      traefik.http.services.cms.loadbalancer.server.port: 80

    networks:
      - cms-network
      - shared
    depends_on:
      - reverse-proxy
      - cms-db
    restart: always

  cms-db:
    image: postgres:17-alpine
    env_file: .env
    networks:
      - cms-network
      - shared
    volumes:
      - db:/var/lib/postgresql/data
    restart: always

volumes:
  db:


networks:
  # for dev purpose
  shared:
    external: true
    name: ${SHARED-NETWORK}
  cms-network:
    driver: bridge
