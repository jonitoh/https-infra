services:
  frontend:
    image: traefik/whoami
    container_name: frontend
    restart: always
    networks:
      - shared
    env_file: .env
    labels:
      # -- global
      traefik.enable: true
      traefik.docker.network: ${SHARED_NETWORK}
      
      # -- router
      traefik.http.routers.frontend.service: frontend
      traefik.http.routers.frontend.entrypoints: websecure
      traefik.http.routers.frontend.middlewares: "default@file"
      traefik.http.routers.frontend.rule: Host(`${FRONTEND_HOST:?err}`)
      traefik.http.routers.frontend.tls.certresolver: "letsencrypt"
      traefik.http.routers.frontend.tls.options: "modern@file"
      traefik.http.routers.frontend.tls: true
      # service
      traefik.http.services.frontend.loadBalancer.server.port: 80
      traefik.http.services.frontend.loadBalancer.sticky.cookie.httpOnly: true
      traefik.http.services.frontend.loadBalancer.sticky.cookie.secure: true
      traefik.http.services.frontend.loadBalancer.sticky.cookie.name: frontend_sticky
      traefik.http.services.frontend.loadBalancer.sticky.cookie: true

    networks:
      - shared
    restart: always

networks:
  shared:
    external: true
    name: ${SHARED_NETWORK}
