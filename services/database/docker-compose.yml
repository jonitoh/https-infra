services:
  pgserver:
    image: postgis/postgis:${POSTGRES_VERSION}-3.5
    container_name: pgserver
    restart: always
    networks:
      - shared
    volumes:
      - pgserver-data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - ./config:/etc/postgresql
      #- ./data/logs:/logs:rw
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file: .env
    environment:
      POSTGRES_VERSION: ${POSTGRES_VERSION:-17}
      POSTGRES_USER: ${POSTGRES_USER:?err}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
      POSTGRES_DB: ${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_DB)
      PGDATA: /var/lib/postgresql/data
      DB_PORT: ${DB_PORT:-5432}
    labels:
      traefik.enable: true
      # router
      traefik.tcp.routers.pgserver.service: pgserver
      traefik.tcp.routers.pgserver.rule: HostSNI(`${DB_HOST}`)
      traefik.tcp.routers.pgserver.entrypoints: tcp
      traefik.tcp.routers.pgserver.tls: true
      #traefik.http.routers.pgserver.middlewares: "default@file"
      traefik.tcp.routers.pgserver.tls.certresolver: "letsencrypt"
      traefik.tcp.routers.pgserver.tls.options: "modern@file"
      #traefik.http.routers.pgserver.tls: true
      traefik.tcp.routers.pgserver.tls.domains[0].main: "${DB_HOST}"
      traefik.tcp.routers.pgserver.tls.domains[0].sans: "*.${DB_HOST}"
      # service
      traefik.tcp.services.pgserver.loadBalancer.server.port: ${DB_PORT}
      #traefik.tcp.services.pgserver.loadBalancer.sticky.cookie.httpOnly: true
      #traefik.tcp.services.pgserver.loadBalancer.sticky.cookie.secure: true
      #traefik.tcp.services.pgserver.loadBalancer.sticky.cookie.name: pgserver_sticky
      #traefik.tcp.services.pgserver.loadBalancer.sticky.cookie: true
      #traefik.tcp.routers.postgres.middlewares=tcpSecureByIp@file

    healthcheck:
      test:
        - CMD-SHELL
        - psql -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 10s
      retries: 50
      start_period: 30s

volumes:
  pgserver-data:

networks:
  shared:
    external: true
    name: ${SHARED_NETWORK}
