services:
  reverse-proxy:
    image: traefik:v3.3
    # docker name as shown via "docker container ls"
    container_name: reverse-proxy
    restart: unless-stopped
    # prevent from modifying anything that would survive a restart
    read_only: true
    # prevent from acquiring more privileges than given at start
    security_opt:
      - "no-new-privileges=true"
    networks:
      - shared
    ports:
      - 80:80 # web ( http )
      - 443:443 # websecure ( https )
      # - 8080:8080 # web ui ( dashboard )
      - 5432:5432 # database (tcp connection)
      # - 5050:5050 # database ui ( dashboard )
      - 1337:1337 # cms ui ( dashboard )
      - 3000:3000 # analytics ui ( dashboard )
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # Docker API's main entry point: use by traefik to auto-discover containers
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # configuration TRAEFIK LET'S ENCRYPT (static + dynamic + acme )
      - ./config:/etc/traefik
      # configuration private routes
      - ./secrets/users_file:/users_file:ro
      # Certs dir
      - rp-ssl-certs:/etc/certs
      # logs
      - ./logs:/logs:rw
    env_file: .env
    command:
      - '--certificatesresolvers.letsencrypt.acme.email=${CF_API_EMAIL}'
      - '--entrypoints.websecure.http.tls.domains[0].main="${DOMAIN}"'
      - '--entrypoints.websecure.http.tls.domains[0].sans="*.${DOMAIN}"'
    labels:
      # -- global
      traefik.enable: true
      traefik.docker.network: ${SHARED_NETWORK}
      
      # -- router
      traefik.http.routers.reverse-proxy.entrypoints: websecure
      traefik.http.routers.reverse-proxy.middlewares: "credentials-auth@file,default@file"
      traefik.http.routers.reverse-proxy.rule: Host(`${REVERSE_PROXY_HOST}`)
      traefik.http.routers.reverse-proxy.tls: true
      traefik.http.routers.reverse-proxy.tls.certresolver: "letsencrypt"
      traefik.http.routers.reverse-proxy.tls.options: "modern@file"
      traefik.http.routers.reverse-proxy.service: api@internal
      
      # -- service
      traefik.http.services.reverse-proxy.loadBalancer.server.port: 443
      traefik.http.services.reverse-proxy.loadBalancer.sticky.cookie.httpOnly: true
      traefik.http.services.reverse-proxy.loadBalancer.sticky.cookie.secure: true
      traefik.http.services.reverse-proxy.loadBalancer.sticky.cookie.name: reverse-proxy_sticky
      traefik.http.services.reverse-proxy.loadBalancer.sticky.cookie: true
      
volumes:
  rp-ssl-certs:

networks:
  shared:
    external: true
    name: ${SHARED_NETWORK}
